name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump:
    name: Bump Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Bump version
        id: bump-version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update manifest.json
        run: |
          # Update version in manifest.json
          sed -i 's/"version": ".*"/"version": "${{ steps.bump-version.outputs.NEW_VERSION }}"/' manifest.json
          echo "Updated manifest.json version to ${{ steps.bump-version.outputs.NEW_VERSION }}"

      - name: Generate changelog entry
        run: |
          DATE=$(date +%Y-%m-%d)

          # Create or update CHANGELOG.md
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi

          # Create temporary file with new entry
          cat << EOF > changelog-entry.tmp
          ## [v${{ steps.bump-version.outputs.NEW_VERSION }}] - $DATE

          ### Added
          - _Please update with new features_

          ### Changed
          - _Please update with changes_

          ### Fixed
          - _Please update with bug fixes_

          EOF

          # Combine with existing changelog
          if [ -f CHANGELOG.md ]; then
            tail -n +3 CHANGELOG.md >> changelog-entry.tmp
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            cat changelog-entry.tmp >> CHANGELOG.md
            rm changelog-entry.tmp
          fi

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: bump version to v${{ steps.bump-version.outputs.NEW_VERSION }}'
          title: 'chore: bump version to v${{ steps.bump-version.outputs.NEW_VERSION }}'
          body: |
            ## Version Bump ðŸš€

            This PR bumps the version from `v${{ steps.current-version.outputs.CURRENT_VERSION }}` to `v${{ steps.bump-version.outputs.NEW_VERSION }}`.

            ### Changes
            - Updated version in `package.json`
            - Updated version in `manifest.json`
            - Added changelog entry

            ### Next Steps
            1. Review and update the changelog entry if needed
            2. Merge this PR to trigger the automatic release workflow

            ---
            _This PR was automatically created by the Version Bump workflow_
          branch: bump-version-${{ steps.bump-version.outputs.NEW_VERSION }}
          delete-branch: true
          labels: |
            version-bump
            automated
